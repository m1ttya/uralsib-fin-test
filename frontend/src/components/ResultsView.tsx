// frontend/src/components/ResultsView.tsx
import { motion } from 'framer-motion';
type BackendQuestion = { id: string; text: string; options: string[] };
type BackendTest = { id: string; title: string; category: string; variant: string; questions: BackendQuestion[] };

type Props = {
  test: BackendTest; // –¥–æ–ø—É—Å–∫–∞–µ–º –∫–∞–∫ –±—ç–∫–µ–Ω–¥-–≤–µ—Ä—Å–∏—é —Ç–µ—Å—Ç–∞
  answers: (number | null)[]; // –∏–Ω–¥–µ–∫—Å—ã –≤ –ü–ï–†–ï–¢–ê–°–û–í–ê–ù–ù–û–ú –ø–æ—Ä—è–¥–∫–µ
  correctByQ?: Record<string, number>; // –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –≤ –ü–ï–†–ï–¢–ê–°–û–í–ê–ù–ù–û–ú –ø–æ—Ä—è–¥–∫–µ –ø–æ questionId
  onRestart?: () => void;
};

export default function ResultsView({ test, answers, correctByQ, onRestart }: Props) {
  // –°—á–∏—Ç–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã, —Å—Ä–∞–≤–Ω–∏–≤–∞—è –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å (–ø–µ—Ä–µ—Ç–∞—Å–æ–≤–∞–Ω–Ω—ã–π)
  // —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏–Ω–¥–µ–∫—Å–æ–º (–ø–µ—Ä–µ—Ç–∞—Å–æ–≤–∞–Ω–Ω—ã–π) –∏–∑ correctByQ
  const correctCount: number = answers.reduce((acc: number, ans: number | null, idx: number) => {
    if (ans === null) return acc;
    const q = test.questions[idx];
    const correctShuffled = correctByQ ? correctByQ[q.id] : undefined;
    if (typeof correctShuffled === 'number') {
      return ans === correctShuffled ? acc + 1 : acc;
    }
    return acc; // –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, —Å—á–∏—Ç–∞–µ–º –∫–∞–∫ –Ω–µ–≤–µ—Ä–Ω—ã–π
  }, 0);

  const score = Math.round((correctCount / test.questions.length) * 100);

  const handleGoToBank = () => {
    window.open('https://uralsib.ru/', '_blank');
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–º–∞–π–ª–∏–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  const getEmoji = (score: number) => {
    if (score >= 80) return 'üéâ';
    if (score >= 60) return 'üòä';
    if (score >= 40) return 'üòê';
    return 'üòî';
  };

  const getMessage = (score: number) => {
    if (score >= 80) return '–û—Ç–ª–∏—á–Ω–æ!';
    if (score >= 60) return '–•–æ—Ä–æ—à–æ!';
    if (score >= 40) return '–ù–µ–ø–ª–æ—Ö–æ!';
    return '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!';
  };

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      transition={{ duration: 0.3, ease: "easeInOut" }}
      className="relative flex flex-col h-full"
    >
      <div className="flex flex-col items-center justify-between sm:justify-center md:justify-center flex-1 px-2 sm:px-3 md:px-2 pt-0 sm:pt-8 md:pt-4 pb-[120px] sm:pb-4 md:pb-2 lg:pb-2 xl:pb-2 2xl:pb-2">
        {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å—Ç–∏–∫–µ—Ä–∞ –∏ —Ç–µ–∫—Å—Ç–∞ - –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ */}
        <div className="flex-1 flex flex-col items-center justify-center pt-16 sm:contents md:contents">
          {/* –°–º–∞–π–ª–∏–∫ */}
          <div className="mb-4 sm:mb-8 md:mb-10 flex justify-center sm:block md:block">
            <div className="text-8xl sm:text-8xl md:text-8xl">{getEmoji(score)}</div>
          </div>
          
          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç –±–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */}
          <div className="text-center max-w-sm mx-auto sm:mb-8 md:mb-10">
          <h2 className="text-2xl sm:text-2xl md:text-3xl text-primary mb-2 sm:mb-2 md:mb-3 font-bold">
            –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {score}%
          </h2>
          
          {getMessage(score) === '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!' ? (
            <button
              onClick={onRestart}
              className="relative text-lg sm:text-xl text-gray-600 mb-2 sm:mb-2 md:mb-3 hover:text-gray-800 transition-colors duration-200 cursor-pointer overflow-hidden"
            >
              <div className="absolute inset-0 bg-gradient-to-r from-white/0 via-white/80 to-white/0 translate-x-[-100%] animate-shimmer"></div>
              <span className="relative z-10">{getMessage(score)}</span>
            </button>
          ) : (
            <p className="text-xl sm:text-xl text-gray-600 mb-2 sm:mb-2 md:mb-3">{getMessage(score)}</p>
          )}
          
          <p className="text-lg sm:text-lg text-gray-500">
            –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {correctCount} –∏–∑ {test.questions.length}
          </p>
          </div>
        </div>
        
        {/* –ö–Ω–æ–ø–∫–∞ - —Ç–æ—á–Ω–æ –∫–∞–∫ –Ω–∞ –ª–µ–Ω–¥–∏–Ω–≥–µ */}
        <motion.button
          whileHover={{ scale: 1.05, y: -2 }}
          whileTap={{ scale: 0.95 }}
          onClick={handleGoToBank}
          className="fixed left-1/2 -translate-x-1/2 z-10 sm:relative sm:left-auto sm:translate-x-0 bg-gradient-to-r from-primary to-primary text-white rounded-full premium-button shadow-lg hover:shadow-purple-900/25 hover:from-secondary hover:to-secondary overflow-hidden group flex items-center justify-center whitespace-nowrap"
          style={{
            bottom: window.innerWidth < 640 ? `calc(env(safe-area-inset-bottom, 0px) + 84px)` : undefined,
            padding: window.innerWidth < 640 ? '20px 60px' : '18px 36px',
            fontSize: window.innerWidth < 640 ? '22px' : '20px',
            minHeight: window.innerWidth < 640 ? '64px' : '60px',
            maxWidth: window.innerWidth < 640 ? '360px' : '260px',
            width: 'auto'
          }}
        >
          <div className="absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-white/0 translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-700"></div>
          <span className="relative z-10">–ü–µ—Ä–µ–π—Ç–∏ –≤ –±–∞–Ω–∫</span>
        </motion.button>
      </div>
    </motion.div>
  );
                }