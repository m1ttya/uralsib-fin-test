// frontend/src/components/ResultsView.tsx
import { motion } from 'framer-motion';
import { useEffect, useState } from 'react';
type BackendQuestion = { id: string; text: string; options: string[] };
// –î–æ–ø—É—Å–∫–∞–µ–º –º–æ–∫–æ–≤—É—é –º–æ–¥–µ–ª—å: –º–æ–∂–µ—Ç –±—ã—Ç—å correctIndex
type MockQuestion = { text: string; options: string[]; correctIndex: number };
type BackendTest = { id: string; title: string; category: string; variant?: string; questions: (BackendQuestion | MockQuestion)[] };

type Props = {
  test: BackendTest; // –¥–æ–ø—É—Å–∫–∞–µ–º –∫–∞–∫ –±—ç–∫–µ–Ω–¥-–≤–µ—Ä—Å–∏—é —Ç–µ—Å—Ç–∞
  answers: (number | null)[]; // –∏–Ω–¥–µ–∫—Å—ã –≤ –ü–ï–†–ï–¢–ê–°–û–í–ê–ù–ù–û–ú –ø–æ—Ä—è–¥–∫–µ
  correctByQ?: Record<string, number>; // –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –≤ –ü–ï–†–ï–¢–ê–°–û–í–ê–ù–ù–û–ú –ø–æ—Ä—è–¥–∫–µ –ø–æ questionId
  onRestart?: () => void;
};

export default function ResultsView({ test, answers, correctByQ, onRestart }: Props) {
  // Ensure modal container width is controlled when showing results
  useEffect(() => {
    // Try to find the nearest test modal container and adjust its width
    const paper = document.querySelector('.results-modal-paper') as HTMLElement | null;
    if (!paper) return;
    const prevWidth = paper.style.width;
    const prevMaxWidth = paper.style.maxWidth;
    // Apply desired width for results view
    paper.style.width = 'min(900px, 94vw)';
    paper.style.maxWidth = 'none';
    return () => {
      // Restore on unmount
      paper.style.width = prevWidth;
      paper.style.maxWidth = prevMaxWidth;
    };
  }, []);
  // –°—á–∏—Ç–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã, —Å—Ä–∞–≤–Ω–∏–≤–∞—è –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å (–ø–µ—Ä–µ—Ç–∞—Å–æ–≤–∞–Ω–Ω—ã–π)
  // —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏–Ω–¥–µ–∫—Å–æ–º (–ø–µ—Ä–µ—Ç–∞—Å–æ–≤–∞–Ω–Ω—ã–π) –∏–∑ correctByQ
  const correctCount: number = answers.reduce((acc: number, ans: number | null, idx: number) => {
    if (ans === null) return acc;
    const q: any = test.questions[idx];
    // –ï—Å–ª–∏ –µ—Å—Ç—å correctByQ (—à—É–º—Ñ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å –æ—Ç –±—ç–∫–µ–Ω–¥–∞)
    const correctShuffled = correctByQ && q?.id ? correctByQ[q.id] : undefined;
    if (typeof correctShuffled === 'number') {
      return ans === correctShuffled ? acc + 1 : acc;
    }
    // –§–æ–ª–ª–±—ç–∫ –¥–ª—è –º–æ–∫–æ–≤: –µ—Å–ª–∏ —É –≤–æ–ø—Ä–æ—Å–∞ –µ—Å—Ç—å correctIndex –∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ—Ä—è–¥–æ–∫ –Ω–µ –º–µ–Ω—è–ª–∏
    if (typeof q?.correctIndex === 'number') {
      return ans === q.correctIndex ? acc + 1 : acc;
    }
    return acc;
  }, 0);

  const score = Math.round((correctCount / test.questions.length) * 100);

  const handleGoToBank = (url: string) => {
    console.log('–û—Ç–∫—Ä—ã–≤–∞–µ–º –±–∞–Ω–∫:', url);
    try {
      window.open(url, '_blank', 'noopener,noreferrer');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±–∞–Ω–∫–∞:', error);
      // Fallback - –ø—Ä—è–º–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
      window.location.href = url;
    }
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–º–∞–π–ª–∏–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  const getEmoji = (score: number) => {
    if (score >= 80) return 'üéâ';
    if (score >= 60) return 'üòä';
    if (score >= 40) return 'üòê';
    return 'üòî';
  };

  const getMessage = (score: number) => {
    if (score >= 80) return '–û—Ç–ª–∏—á–Ω–æ!';
    if (score >= 60) return '–•–æ—Ä–æ—à–æ!';
    if (score >= 40) return '–ù–µ–ø–ª–æ—Ö–æ!';
    return '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!';
  };

  type Product = { title: string; linkUrl: string; linkText?: string };
  const [byTopic, setByTopic] = useState<Record<string, Product[]>>({});

  useEffect(() => {
    const url = `${import.meta.env.BASE_URL}api/products_by_topic.json?v=${Date.now()}`;
    fetch(url, { cache: 'no-store' }).then(async (r) => {
      try {
        const data = await r.json();
        setByTopic(data || {});
      } catch {}
    }).catch(() => {});
  }, []);

  // –ü—Ä–æ—Å—Ç–∞—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–µ–º—ã –≤–æ–ø—Ä–æ—Å–∞ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
  const detectTopic = (text: string): string => {
    const t = (text || '').toLowerCase();
    if (/–≤–∫–ª–∞–¥|–¥–µ–ø–æ–∑–∏—Ç|–Ω–∞–∫–æ–ø–∏—Ç/.test(t)) return 'deposits';
    if (/–∏–ø–æ—Ç–µ–∫/.test(t)) return 'mortgage';
    if (/–∫—Ä–µ–¥–∏—Ç(?!–Ω–∞—è –∫–∞—Ä—Ç–∞)|–∑–∞–π–º/.test(t)) return 'credits';
    if (/–∫–∞—Ä—Ç–∞|–∫–∞—Ä—Ç–æ–π/.test(t)) return 'cards';
    if (/–∏–∏—Å|–∏–Ω–≤–µ—Å—Ç|–∞–∫—Ü–∏|–æ–±–ª–∏–≥–∞—Ü|–æ—Ñ–∑/.test(t)) return 'investments';
    if (/—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω/.test(t)) return 'insurance';
    if (/–±—é–¥–∂–µ—Ç|–ø–æ–¥—É—à–∫–∞|–∫–æ–ø–∏—Ç|—Å–±–µ—Ä–µ–∂|—Ä–∞—Å—Ö–æ–¥|–¥–æ—Ö–æ–¥/.test(t)) return 'budgeting';
    return 'budgeting';
  };

  // –ù–∞–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç–µ–º–∞–º
  const topicStats = new Map<string, { total: number; correct: number }>();
  test.questions.forEach((q: any, idx: number) => {
    const topic = detectTopic(q.text || '');
    const s = topicStats.get(topic) || { total: 0, correct: 0 };
    s.total += 1;
    const ans = answers[idx];
    const correctShuffled = correctByQ && q?.id ? correctByQ[q.id] : (typeof (q as any)?.correctIndex === 'number' ? (q as any).correctIndex : undefined);
    if (typeof ans === 'number' && typeof correctShuffled === 'number' && ans === correctShuffled) s.correct += 1;
    topicStats.set(topic, s);
  });
  const scoredTopics = Array.from(topicStats.entries()).map(([k, v]) => ({ key: k, score: v.correct / Math.max(1, v.total) }))
    .sort((a,b)=>b.score-a.score);

  const topTopics = scoredTopics.filter(t=>t.score >= 0.4).slice(0,2).map(t=>t.key);
  const pool = topTopics.flatMap(t => byTopic[t] || []);
  const recs = (pool.length ? pool : (byTopic['budgeting'] || [])).slice(0,3);

  const getResultMessage = () => {
    if (score >= 90) return '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ!';
    if (score >= 80) return '–û—Ç–ª–∏—á–Ω–æ!';
    if (score >= 70) return '–•–æ—Ä–æ—à–æ!';
    if (score >= 60) return '–ù–µ–ø–ª–æ—Ö–æ!';
    return '–ï—Å—Ç—å –∫—É–¥–∞ —Ä–∞—Å—Ç–∏!';
  };

  const getResultDescription = () => {
    if (score >= 90) return '–í–∞—à–∏ –∑–Ω–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –Ω–∞ –≤—ã—Å–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ.';
    if (score >= 80) return '–í—ã –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ —Ö–æ—Ä–æ—à–µ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. –°–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–∞!';
    if (score >= 70) return '–ù–µ–ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –£ –≤–∞—Å –µ—Å—Ç—å –±–∞–∑–æ–≤–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —Ä–æ—Å—Ç–∞.';
    if (score >= 60) return '–í—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏! –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏–∑—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.';
    return '–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å! –ö–∞–∂–¥—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç —Å –º–∞–ª–æ–≥–æ. –ò–∑—É—á–∏—Ç–µ –Ω–∞—à–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';
  };

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞)
  const getPersonalRecommendations = () => {
    const recommendations = [];
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if (score < 70) {
      recommendations.push({
        title: '–ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏',
        description: '–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–Ω—è—Ç—å –∫–ª—é—á–µ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ–Ω—å–≥–∞–º–∏',
        icon: 'üìö',
        category: '–û–±—É—á–µ–Ω–∏–µ'
      });
    }
    
    if (score >= 60) {
      recommendations.push({
        title: '–û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Å—á—ë—Ç',
        description: '–ù–∞—á–Ω–∏—Ç–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥—É—à–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å –≤—ã–≥–æ–¥–Ω–æ–π —Å—Ç–∞–≤–∫–æ–π',
        icon: 'üí∞',
        category: '–ù–∞–∫–æ–ø–ª–µ–Ω–∏—è'
      });
    }
    
    if (score >= 70) {
      recommendations.push({
        title: '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã',
        description: '–ì–æ—Ç–æ–≤—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É? –ò–∑—É—á–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏—É–º–Ω–æ–∂–µ–Ω–∏—è –∫–∞–ø–∏—Ç–∞–ª–∞',
        icon: 'üìà',
        category: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏'
      });
    }
    
    if (score >= 80) {
      recommendations.push({
        title: '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –Ω–∞–ª–æ–≥–∏ —Å –ò–ò–°',
        description: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π —Å—á—ë—Ç –ø–æ–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–ª–æ–≥–æ–≤—ã–µ –ª—å–≥–æ—Ç—ã',
        icon: 'üéØ',
        category: '–ù–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏–µ'
      });
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if (correctCount < test.questions.length) {
      recommendations.push({
        title: '–ò–∑—É—á–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ —Å–ª–∞–±—ã–º —Ç–µ–º–∞–º',
        description: `–ü—Ä–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ ${test.questions.length - correctCount} –≤–æ–ø—Ä–æ—Å(–æ–≤), –≥–¥–µ –±—ã–ª–∏ –æ—à–∏–±–∫–∏`,
        icon: 'üîç',
        category: '–†–∞–∑–≤–∏—Ç–∏–µ'
      });
    }
    
    recommendations.push({
      title: '–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –º–æ–±–∏–ª—å–Ω—ã–π –±–∞–Ω–∫',
      description: '–£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ —É–¥–æ–±–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –£—Ä–∞–ª—Å–∏–±',
      icon: 'üì±',
      category: '–°–µ—Ä–≤–∏—Å—ã'
    });
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—ã–µ 4 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    return recommendations.slice(0, 4);
  };

  const personalRecommendations = getPersonalRecommendations();

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      transition={{ duration: 0.3, ease: "easeInOut" }}
      className="relative flex flex-col h-full overflow-hidden bg-gradient-to-br from-primary via-secondary to-purple-600"
    >
      {/* –õ–æ–≥–æ—Ç–∏–ø –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
      <div className="flex justify-center py-4 sm:py-6 md:py-8 px-4 sm:px-6 md:px-8">
        <img src="./uralsib_logo_white.svg" alt="–ë–∞–Ω–∫ –£—Ä–∞–ª—Å–∏–±" className="h-8 sm:h-9 md:h-10 lg:h-11 w-auto" />
      </div>

      {/* –ï–¥–∏–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ */}
      <div className="relative flex-1 overflow-hidden">
        
        {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ–æ–Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
        <div className="absolute inset-0 opacity-10">
          <div className="absolute top-8 right-12 w-24 h-24 bg-white rounded-full blur-xl"></div>
          <div className="absolute bottom-16 left-8 w-32 h-32 bg-white rounded-full blur-2xl"></div>
          <div className="absolute top-1/2 right-1/4 w-16 h-16 bg-white rounded-full blur-lg"></div>
        </div>

        {/* 3D –ø–µ—Ä—Å–æ–Ω–∞–∂ */}
        <div className="absolute right-8 top-8 opacity-80">
          <img src="/images/img/3_image10.png" alt="character" className="w-24 h-24 object-contain drop-shadow-lg" 
               onError={(e)=>{(e.currentTarget as HTMLImageElement).style.display='none'}}/>
        </div>

        {/* CSS –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
        <div className="absolute left-8 bottom-8 opacity-30">
          <div className="w-12 h-12 bg-white/20 rounded-full blur-sm"></div>
        </div>
        <div className="absolute right-1/4 bottom-12 opacity-20">
          <div className="w-8 h-8 bg-white/30 rounded-full blur-lg"></div>
        </div>
        <div className="absolute left-1/4 top-1/2 opacity-15">
          <div className="w-6 h-6 bg-white/25 rounded-full blur-md"></div>
        </div>

        {/* –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–æ–º–ø–æ–Ω–æ–≤–∫–∞ - –∫–æ–º–ø–∞–∫—Ç–Ω–∞—è */}
        <div className="flex flex-col lg:flex-row gap-6 p-6 h-full">
          
          {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∫–Ω–æ–ø–∫–∏ */}
          <div className="flex-1 flex flex-col justify-between py-4 relative z-10">
            <div className="relative z-10">
              <div className="text-white/70 text-sm font-medium mb-2 uppercase tracking-wider">
                –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞
              </div>
              
              <div className="flex items-baseline gap-3 mb-4">
                <div className="text-white text-5xl lg:text-6xl font-black">{score}</div>
                <div className="text-white/90 text-3xl font-bold">%</div>
              </div>
              
              <h2 className="text-white text-2xl lg:text-3xl font-bold mb-4">{getResultMessage()}</h2>
              
              <p className="text-white/90 text-base lg:text-lg leading-relaxed max-w-md mb-6">
                {getResultDescription()}
              </p>

              {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
              <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-4 inline-block">
                <div className="text-white/70 text-sm mb-1">–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤</div>
                <div className="text-white text-xl font-bold">{correctCount} –∏–∑ {test.questions.length}</div>
              </div>
            </div>

            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
            <div className="my-6">
              {/* –°—Ç–∏–ª—å–Ω—ã–µ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
              <div className="flex items-center justify-center mb-6">
                <div className="flex items-center gap-6">
                  <motion.div 
                    initial={{ opacity: 0, scale: 0.8, rotate: -45 }}
                    animate={{ opacity: 1, scale: 1, rotate: 0 }}
                    transition={{ delay: 0.5, duration: 0.6 }}
                    className="w-16 h-16 bg-gradient-to-br from-yellow-400/30 to-orange-500/30 rounded-2xl flex items-center justify-center backdrop-blur-sm border border-white/20"
                  >
                    <span className="text-3xl">üí∞</span>
                  </motion.div>
                  <motion.div 
                    initial={{ opacity: 0, scale: 0.8, rotate: 45 }}
                    animate={{ opacity: 1, scale: 1, rotate: 0 }}
                    transition={{ delay: 0.6, duration: 0.6 }}
                    className="w-20 h-20 bg-gradient-to-br from-green-400/30 to-blue-500/30 rounded-2xl flex items-center justify-center backdrop-blur-sm border border-white/20"
                  >
                    <span className="text-4xl">üìà</span>
                  </motion.div>
                  <motion.div 
                    initial={{ opacity: 0, scale: 0.8, rotate: -45 }}
                    animate={{ opacity: 1, scale: 1, rotate: 0 }}
                    transition={{ delay: 0.7, duration: 0.6 }}
                    className="w-16 h-16 bg-gradient-to-br from-purple-400/30 to-pink-500/30 rounded-2xl flex items-center justify-center backdrop-blur-sm border border-white/20"
                  >
                    <span className="text-3xl">üéØ</span>
                  </motion.div>
                </div>
              </div>

              {/* –°—Ç–∏–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
              <div className="flex flex-col gap-3 max-w-md">
                <motion.div 
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: 0.8 }}
                  className="flex items-center gap-3 text-white/90 text-base bg-white/10 rounded-xl p-3 backdrop-blur-sm"
                >
                  <div className="w-3 h-3 bg-green-400 rounded-full shadow-lg"></div>
                  <span className="font-medium">–ë–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –æ—Å–≤–æ–µ–Ω—ã</span>
                </motion.div>
                
                {score >= 70 && (
                  <motion.div 
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ delay: 0.9 }}
                    className="flex items-center gap-3 text-white/90 text-base bg-white/10 rounded-xl p-3 backdrop-blur-sm"
                  >
                    <div className="w-3 h-3 bg-blue-400 rounded-full shadow-lg"></div>
                    <span className="font-medium">–ì–æ—Ç–æ–≤—ã –∫ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º</span>
                  </motion.div>
                )}
                
                {score >= 90 && (
                  <motion.div 
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ delay: 1.0 }}
                    className="flex items-center gap-3 text-white/90 text-base bg-white/10 rounded-xl p-3 backdrop-blur-sm"
                  >
                    <div className="w-3 h-3 bg-purple-400 rounded-full shadow-lg"></div>
                    <span className="font-medium">–≠–∫—Å–ø–µ—Ä—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤</span>
                  </motion.div>
                )}
              </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ –ª–µ–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ */}
            <div className="flex flex-col gap-3 max-w-sm relative z-50">
              <button
                onClick={(e) => {
                  e.preventDefault();
                  e.stopPropagation();
                  console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –±–∞–Ω–∫–∞');
                  handleGoToBank('https://uralsib.ru/');
                }}
                className="w-full bg-white text-primary rounded-xl py-3 px-6 font-semibold shadow-lg hover:shadow-xl hover:bg-white/90 transition-all duration-300 cursor-pointer relative z-50 pointer-events-auto"
                type="button"
                style={{ pointerEvents: 'auto' }}
              >
                –û—Ç–∫—Ä—ã—Ç—å —Å—á—ë—Ç –≤ –£—Ä–∞–ª—Å–∏–±–µ
              </button>
              
              {score < 80 && (
                <button
                  onClick={(e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —Ä–µ—Å—Ç–∞—Ä—Ç–∞', onRestart);
                    if (onRestart) {
                      onRestart();
                    } else {
                      console.error('onRestart –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω!');
                    }
                  }}
                  className="w-full bg-white/20 text-white rounded-xl py-3 px-6 font-semibold hover:bg-white/30 transition-all duration-300 border border-white/30 cursor-pointer relative z-50 pointer-events-auto"
                  type="button"
                  style={{ pointerEvents: 'auto' }}
                >
                  –ü—Ä–æ–π—Ç–∏ –µ—â—ë —Ä–∞–∑
                </button>
              )}
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —Ç–æ–ª—å–∫–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
          <motion.div 
            className="flex-1 bg-white/10 backdrop-blur-md rounded-3xl p-6 border border-white/20"
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.2 }}
          >
            <div className="flex items-center gap-3 mb-6">
              <div className="w-8 h-8 bg-white/20 rounded-xl flex items-center justify-center">
                <svg className="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                </svg>
              </div>
              <div>
                <h3 className="text-white text-lg font-bold">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
                <span className="text-white/70 text-sm">–ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤</span>
              </div>
            </div>
            
            {/* –°–µ—Ç–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π */}
            <div className="space-y-4">
              {personalRecommendations.slice(0, 3).map((rec, idx) => (
                <motion.div
                  key={rec.title}
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.3 + idx * 0.1 }}
                  className="flex items-start gap-4 p-4 rounded-2xl bg-white/10 hover:bg-white/15 border border-white/10 hover:border-white/30 transition-all duration-300 group cursor-pointer backdrop-blur-sm"
                  onClick={() => handleGoToBank('https://uralsib.ru/')}
                >
                  <div className="text-2xl flex-shrink-0">{rec.icon}</div>
                  <div className="flex-1 min-w-0">
                    <div className="flex items-center gap-2 mb-2">
                      <span className="text-xs bg-white/20 text-white px-2 py-1 rounded-full font-medium">
                        {rec.category}
                      </span>
                    </div>
                    <h4 className="text-white font-semibold text-base mb-2 group-hover:text-white/90 transition-colors">
                      {rec.title}
                    </h4>
                    <p className="text-white/70 text-sm leading-relaxed">
                      {rec.description}
                    </p>
                  </div>
                </motion.div>
              ))}
            </div>
          </motion.div>
        </div>
      </div>
    </motion.div>
  );
                }